How did viewing a diff between two versions of a file help you see the bug that was introduced?

when the file is large, it is difficult to tell the different between files. diff command can help auto check between the files. Some typing error is easy overlook as well. 


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

easy to roll back when you broken something. To know how your code develop bit by bit. ???

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

It is clear that auto saved take you less effect to to vc but without commit message, the save is less helpful as you cannot find the point of the saveing. Commit on Git can give you a chance to think what you are doing on the code. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

git have a smart way to track multiple files, it don't save the files if they have no change ont he commit. Google Docs is not for codeing and it don't need to track multiple files. 

How can you use the commands git log and git diff to view the history of files?

git log to see all commit in revert time order
git diff to compare diff commit

testing, testing , testing.....

How might using version control make you more confident to make changes that could break something?

the git save all your change once you commited. then you can checkout to jump between different commits and change code without breaking anything....

Now that you have your workspace set up, what do you want to try using Git for?

I want to use git for every stuff, form writing to design, html/css to codeing....every funny stuff
